CREATE KEYSPACE historicaldata
  WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 3 };

CREATE TABLE historicaldata.stocks (
  stockid text,
  trading_time timestamp,
  name text,
  bid decimal,
  offer decimal,
  volume decimal,
  PRIMARY KEY (stockid, trading_time)
)
WITH CLUSTERING ORDER BY (trading_time DESC);

ALTER TABLE historicaldata.stocks WITH compaction = {'class': 'DateTieredCompactionStrategy', 'timestamp_resolution':'MICROSECONDS', 'base_time_seconds':'3600', 'max_sstable_age_days':'31'};

CREATE TABLE historicaldata.dummystocks (
  stockid text,
  trading_time timestamp,
  name text,
  bid decimal,
  offer decimal,
  volume decimal,
  PRIMARY KEY (stockid, trading_time)
)
WITH CLUSTERING ORDER BY (trading_time DESC);

ALTER TABLE historicaldata.dummystocks WITH compaction = {'class': 'DateTieredCompactionStrategy', 'timestamp_resolution':'MICROSECONDS', 'base_time_seconds':'3600', 'max_sstable_age_days':'31'};

CREATE TABLE historicaldata.indicators (
  indicatorid text,
  trading_time timestamp,
  value decimal,
  PRIMARY KEY (indicatorid, trading_time)
)
WITH CLUSTERING ORDER BY (trading_time DESC);

ALTER TABLE historicaldata.indicators WITH compaction = {'class': 'DateTieredCompactionStrategy', 'timestamp_resolution':'MICROSECONDS', 'base_time_seconds':'3600', 'max_sstable_age_days':'31'};

CREATE TABLE historicaldata.dummyindicators (
  indicatorid text,
  trading_time timestamp,
  value decimal,
  PRIMARY KEY (indicatorid, trading_time)
)
WITH CLUSTERING ORDER BY (trading_time DESC);

ALTER TABLE historicaldata.dummyindicators WITH compaction = {'class': 'DateTieredCompactionStrategy', 'timestamp_resolution':'MICROSECONDS', 'base_time_seconds':'3600', 'max_sstable_age_days':'31'};

CREATE TABLE historicaldata.signals (
  signalid text,
  trading_time timestamp,
  tradeid text,
  value int,
  mktdatavalue decimal,
  PRIMARY KEY (signalid, trading_time)
)
WITH CLUSTERING ORDER BY (trading_time DESC);

ALTER TABLE historicaldata.signals WITH compaction = {'class': 'DateTieredCompactionStrategy', 'timestamp_resolution':'MICROSECONDS', 'base_time_seconds':'3600', 'max_sstable_age_days':'31'};

CREATE TABLE historicaldata.dummysignals (
  signalid text,
  trading_time timestamp,
  tradeid text,
  value int,
  mktdatavalue decimal,
  PRIMARY KEY (signalid, trading_time)
)
WITH CLUSTERING ORDER BY (trading_time DESC);

ALTER TABLE historicaldata.dummysignals WITH compaction = {'class': 'DateTieredCompactionStrategy', 'timestamp_resolution':'MICROSECONDS', 'base_time_seconds':'3600', 'max_sstable_age_days':'31'};

CREATE KEYSPACE businessdata
  WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 3 };

CREATE TABLE businessdata.trades (
  tradeid text,  
  confirmation_time timestamp,  
  direction int,
  price decimal,
  size int,
  mktdataid text,
  trading_time timestamp,
  traderef text,
  PRIMARY KEY (mktdataid,confirmation_time)
);

CREATE TABLE businessdata.dummytrades (
  tradeid text,  
  confirmation_time timestamp,  
  direction int,
  price decimal,
  size int,
  mktdataid text,
  trading_time timestamp,
  traderef text,
  PRIMARY KEY (mktdataid,confirmation_time)
);

ALTER TABLE businessdata.dummytrades WITH compaction = {'class': 'DateTieredCompactionStrategy', 'timestamp_resolution':'MICROSECONDS', 'base_time_seconds':'3600', 'max_sstable_age_days':'31'};

CREATE KEYSPACE staticdata
  WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 3 };

CREATE TABLE staticdata.anncalibration (
  annid text,  
  version int,
  mktdataid text,
  weights list<decimal>,
  insert_time timestamp,
  error decimal,
  learning_rate decimal,
  PRIMARY KEY (annid, mktdataid, version)
)
WITH CLUSTERING ORDER BY (mktdataid ASC, version ASC);

CREATE TABLE historicaldata.robindicator_c3 (
  mktdataid text,
  timeframe_mn int,
  trading_time timestamp,
  res decimal,
  sup decimal,
  sub_res decimal,
  sub_sup decimal,
  candle1_min decimal,
  candle1_max decimal,
  candle1_begin decimal,
  candle1_end decimal,
  candle2_min decimal,
  candle2_max decimal,
  candle2_begin decimal,
  candle2_end decimal,
  candle3_min decimal,
  candle3_max decimal,
  candle3_begin decimal,
  candle3_end decimal,
  minima list<decimal>,
  maxima list<decimal>,
  startvalues list<decimal>,
  endvalues list<decimal>,
  PRIMARY KEY (mktdataid, timeframe_mn, trading_time)
)
WITH CLUSTERING ORDER BY (timeframe_mn DESC, trading_time DESC);

ALTER TABLE historicaldata.robindicator_c3 WITH compaction = {'class': 'DateTieredCompactionStrategy', 'timestamp_resolution':'MICROSECONDS', 'base_time_seconds':'3600', 'max_sstable_age_days':'31'};

CREATE TABLE historicaldata.dummyrobindicator_c3 (
  mktdataid text,
  timeframe_mn int,
  trading_time timestamp,
  res decimal,
  sup decimal,
  sub_res decimal,
  sub_sup decimal,
  candle1_min decimal,
  candle1_max decimal,
  candle1_begin decimal,
  candle1_end decimal,
  candle2_min decimal,
  candle2_max decimal,
  candle2_begin decimal,
  candle2_end decimal,
  candle3_min decimal,
  candle3_max decimal,
  candle3_begin decimal,
  candle3_end decimal,
  minima list<decimal>,
  maxima list<decimal>,
  startvalues list<decimal>,
  endvalues list<decimal>,
  PRIMARY KEY (mktdataid, timeframe_mn, trading_time)
)
WITH CLUSTERING ORDER BY (timeframe_mn DESC, trading_time DESC);

ALTER TABLE historicaldata.dummyrobindicator_c3 WITH compaction = {'class': 'DateTieredCompactionStrategy', 'timestamp_resolution':'MICROSECONDS', 'base_time_seconds':'3600', 'max_sstable_age_days':'31'};


